image: docker:19

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://localhost:2375

services:
  - docker:19-dind

build:
  stage: build
  only:
    - main
  artifacts:
    paths:
      - Dockerfile
  before_script:
    # $CI_JOB_TOKEN is variable automatically added by Gitlab: see https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - IMAGE_TAG="$(echo "$CI_BUILD_REF_NAME" | tr '/' '-')"
  script:
    # - docker pull $CI_REGISTRY_IMAGE || true # Allows us to use --cache-from
    # - docker build --rm --cache-from $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    # - docbker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - echo "bypass"

push-to-sharehost:
  stage: deploy
  variables:
    DEPLOY_CURL_COMMAND: |
      curl --location "$CPANEL_HOST/json-api/cpanel?cpanel_jsonapi_module=Fileman&cpanel_jsonapi_apiversion=2&cpanel_jsonapi_func=uploadfiles&dir=/public/$DEPLOY_DOMAIN&overwrite=1" \
      --header "Authorization: cpanel $CPANEL_USER:$CPANEL_TOKEN" \
      --form '=@"./output/dist-ci.zip"'
  when: manual
  except:
    - tags
  before_script:
    # Login to Gitlab registry
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - IMAGE_TAG="$(echo "$CI_BUILD_REF_NAME" | tr '/' '-')"
  script:
    - docker pull $CI_REGISTRY_IMAGE
    # - docker pull $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - mkdir -p $PWD/output
    - docker run --rm $PWD/output:/usr/output $CI_REGISTRY_IMAGE:$IMAGE_TAG cp ../output/dist.zip /usr/output/dist-ci.zip
    - eval $DEPLOY_CURL_COMMAND
